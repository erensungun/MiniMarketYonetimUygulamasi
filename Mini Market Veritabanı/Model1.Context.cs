//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mini_Market_Veritabanı
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EcemMarketEntities : DbContext
    {
        public EcemMarketEntities()
            : base("name=EcemMarketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Elemanlar> Elemanlar { get; set; }
        public virtual DbSet<Fatura> Fatura { get; set; }
        public virtual DbSet<Kategori> Kategori { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Urunler> Urunler { get; set; }
    
        public virtual int ElemanEkle(Nullable<int> eleId, string eleAdi, Nullable<int> eleYasi, string eleTel, string eleSifre)
        {
            var eleIdParameter = eleId.HasValue ?
                new ObjectParameter("EleId", eleId) :
                new ObjectParameter("EleId", typeof(int));
    
            var eleAdiParameter = eleAdi != null ?
                new ObjectParameter("EleAdi", eleAdi) :
                new ObjectParameter("EleAdi", typeof(string));
    
            var eleYasiParameter = eleYasi.HasValue ?
                new ObjectParameter("EleYasi", eleYasi) :
                new ObjectParameter("EleYasi", typeof(int));
    
            var eleTelParameter = eleTel != null ?
                new ObjectParameter("EleTel", eleTel) :
                new ObjectParameter("EleTel", typeof(string));
    
            var eleSifreParameter = eleSifre != null ?
                new ObjectParameter("EleSifre", eleSifre) :
                new ObjectParameter("EleSifre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElemanEkle", eleIdParameter, eleAdiParameter, eleYasiParameter, eleTelParameter, eleSifreParameter);
        }
    
        public virtual int ElemanGuncelle(Nullable<int> eleId, string eleAdi, Nullable<int> eleYasi, string eleTel, string eleSifre)
        {
            var eleIdParameter = eleId.HasValue ?
                new ObjectParameter("EleId", eleId) :
                new ObjectParameter("EleId", typeof(int));
    
            var eleAdiParameter = eleAdi != null ?
                new ObjectParameter("EleAdi", eleAdi) :
                new ObjectParameter("EleAdi", typeof(string));
    
            var eleYasiParameter = eleYasi.HasValue ?
                new ObjectParameter("EleYasi", eleYasi) :
                new ObjectParameter("EleYasi", typeof(int));
    
            var eleTelParameter = eleTel != null ?
                new ObjectParameter("EleTel", eleTel) :
                new ObjectParameter("EleTel", typeof(string));
    
            var eleSifreParameter = eleSifre != null ?
                new ObjectParameter("EleSifre", eleSifre) :
                new ObjectParameter("EleSifre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElemanGuncelle", eleIdParameter, eleAdiParameter, eleYasiParameter, eleTelParameter, eleSifreParameter);
        }
    
        public virtual int ElemanSil(Nullable<int> eleId)
        {
            var eleIdParameter = eleId.HasValue ?
                new ObjectParameter("EleId", eleId) :
                new ObjectParameter("EleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ElemanSil", eleIdParameter);
        }
    
        public virtual int FaturaEkle(Nullable<int> fatId, Nullable<int> elemanId, string fatTarih, Nullable<double> fatFiyat)
        {
            var fatIdParameter = fatId.HasValue ?
                new ObjectParameter("FatId", fatId) :
                new ObjectParameter("FatId", typeof(int));
    
            var elemanIdParameter = elemanId.HasValue ?
                new ObjectParameter("ElemanId", elemanId) :
                new ObjectParameter("ElemanId", typeof(int));
    
            var fatTarihParameter = fatTarih != null ?
                new ObjectParameter("FatTarih", fatTarih) :
                new ObjectParameter("FatTarih", typeof(string));
    
            var fatFiyatParameter = fatFiyat.HasValue ?
                new ObjectParameter("FatFiyat", fatFiyat) :
                new ObjectParameter("FatFiyat", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FaturaEkle", fatIdParameter, elemanIdParameter, fatTarihParameter, fatFiyatParameter);
        }
    
        public virtual int KategoriEkle(Nullable<int> katId, string katAdi, string katAciklama)
        {
            var katIdParameter = katId.HasValue ?
                new ObjectParameter("KatId", katId) :
                new ObjectParameter("KatId", typeof(int));
    
            var katAdiParameter = katAdi != null ?
                new ObjectParameter("KatAdi", katAdi) :
                new ObjectParameter("KatAdi", typeof(string));
    
            var katAciklamaParameter = katAciklama != null ?
                new ObjectParameter("KatAciklama", katAciklama) :
                new ObjectParameter("KatAciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategoriEkle", katIdParameter, katAdiParameter, katAciklamaParameter);
        }
    
        public virtual int KategoriGuncelle(Nullable<int> katId, string yeniKatAdi, string yeniKatAciklama)
        {
            var katIdParameter = katId.HasValue ?
                new ObjectParameter("KatId", katId) :
                new ObjectParameter("KatId", typeof(int));
    
            var yeniKatAdiParameter = yeniKatAdi != null ?
                new ObjectParameter("YeniKatAdi", yeniKatAdi) :
                new ObjectParameter("YeniKatAdi", typeof(string));
    
            var yeniKatAciklamaParameter = yeniKatAciklama != null ?
                new ObjectParameter("YeniKatAciklama", yeniKatAciklama) :
                new ObjectParameter("YeniKatAciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategoriGuncelle", katIdParameter, yeniKatAdiParameter, yeniKatAciklamaParameter);
        }
    
        public virtual int KategoriSil(Nullable<int> katId)
        {
            var katIdParameter = katId.HasValue ?
                new ObjectParameter("KatId", katId) :
                new ObjectParameter("KatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KategoriSil", katIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UrunEkle(Nullable<int> urunId, Nullable<int> katId, string urunAdi, Nullable<double> urunFiyat, Nullable<int> urunMiktar)
        {
            var urunIdParameter = urunId.HasValue ?
                new ObjectParameter("UrunId", urunId) :
                new ObjectParameter("UrunId", typeof(int));
    
            var katIdParameter = katId.HasValue ?
                new ObjectParameter("KatId", katId) :
                new ObjectParameter("KatId", typeof(int));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var urunFiyatParameter = urunFiyat.HasValue ?
                new ObjectParameter("UrunFiyat", urunFiyat) :
                new ObjectParameter("UrunFiyat", typeof(double));
    
            var urunMiktarParameter = urunMiktar.HasValue ?
                new ObjectParameter("UrunMiktar", urunMiktar) :
                new ObjectParameter("UrunMiktar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunEkle", urunIdParameter, katIdParameter, urunAdiParameter, urunFiyatParameter, urunMiktarParameter);
        }
    
        public virtual int UrunGuncelle(Nullable<int> urunId, Nullable<int> katId, string urunAdi, Nullable<double> urunFiyat, Nullable<int> urunMiktar)
        {
            var urunIdParameter = urunId.HasValue ?
                new ObjectParameter("UrunId", urunId) :
                new ObjectParameter("UrunId", typeof(int));
    
            var katIdParameter = katId.HasValue ?
                new ObjectParameter("KatId", katId) :
                new ObjectParameter("KatId", typeof(int));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var urunFiyatParameter = urunFiyat.HasValue ?
                new ObjectParameter("UrunFiyat", urunFiyat) :
                new ObjectParameter("UrunFiyat", typeof(double));
    
            var urunMiktarParameter = urunMiktar.HasValue ?
                new ObjectParameter("UrunMiktar", urunMiktar) :
                new ObjectParameter("UrunMiktar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunGuncelle", urunIdParameter, katIdParameter, urunAdiParameter, urunFiyatParameter, urunMiktarParameter);
        }
    
        public virtual int UrunSil(Nullable<int> urunId)
        {
            var urunIdParameter = urunId.HasValue ?
                new ObjectParameter("UrunId", urunId) :
                new ObjectParameter("UrunId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UrunSil", urunIdParameter);
        }
    }
}
